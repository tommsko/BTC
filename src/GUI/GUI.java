/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import bridgetournamentcontroller.BRC;
import bridgetournamentcontroller.TW;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import dataManagment.BoardData;
import dataManagment.DatabaseConnector;

/**
 *
 * @author uzivatel
 */
public class GUI extends javax.swing.JFrame {

  
    String dealFile = "310516.dlm";
    String playableFile = "310516.kbl";
    String databasefile = "C:\\PairsScorer\\Databases\\Event137-May31-2016.bws";
    int highBoard = 26;
    ArrayList<Integer> ISOK_ID = new ArrayList<Integer>();
    TW tw = new TW(); 
    
    int last_max = 0;
    
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        addEXS = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        EXS = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        dealFileData = new javax.swing.JTextField();
        MakeableFileData = new javax.swing.JTextField();
        DatabaseFileData = new javax.swing.JTextField();
        HighBoardData = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        Excuses = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        timerLabel = new javax.swing.JLabel();
        setRoundTables_button = new javax.swing.JButton();
        setTableBoards_button = new javax.swing.JButton();
        tables = new javax.swing.JTextField();
        boardsPerTable = new javax.swing.JTextField();
        table_1_indicator = new javax.swing.JLabel();
        StartRound = new javax.swing.JButton();
        setRoundNum = new javax.swing.JButton();
        round_num = new javax.swing.JTextField();
        table_3_indicator = new javax.swing.JLabel();
        table_5_indicator = new javax.swing.JLabel();
        table_2_indicator = new javax.swing.JLabel();
        expected_playTime = new javax.swing.JLabel();
        table_4_indicator = new javax.swing.JLabel();
        table_6_indicator = new javax.swing.JLabel();
        table_7_indicator = new javax.swing.JLabel();
        table_8_indicator = new javax.swing.JLabel();
        average_ok = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        expected_playTimeMin = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        setRoundNum1 = new javax.swing.JButton();
        table_null = new javax.swing.JTextField();
        setRoundMax = new javax.swing.JButton();
        round_numMax = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("CheckAll");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        addEXS.setText("Add excuse");
        addEXS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEXSActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        EXS.setText("ID");

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        dealFileData.setBackground(new java.awt.Color(255, 255, 0));
        dealFileData.setText("Deal file");

        MakeableFileData.setBackground(new java.awt.Color(255, 255, 0));
        MakeableFileData.setText("Makeable file");

        DatabaseFileData.setBackground(new java.awt.Color(255, 255, 0));
        DatabaseFileData.setText("Database file");

        HighBoardData.setBackground(new java.awt.Color(255, 255, 0));
        HighBoardData.setText("HighBoard");
        HighBoardData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HighBoardDataActionPerformed(evt);
            }
        });

        jButton4.setText("RemoveExcuse");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        Excuses.setText("Excuses");
        Excuses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcusesActionPerformed(evt);
            }
        });

        jLabel1.setText("AutoCheck in");

        timerLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        timerLabel.setForeground(new java.awt.Color(255, 0, 0));
        timerLabel.setText("00");

        setRoundTables_button.setText("Set round_tables");
        setRoundTables_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setRoundTables_buttonActionPerformed(evt);
            }
        });

        setTableBoards_button.setText("Set table_boards");

        table_1_indicator.setText("Table 1");

        StartRound.setText("Start round");
        StartRound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartRoundActionPerformed(evt);
            }
        });

        setRoundNum.setText("Set round_num");

        table_3_indicator.setText("Table 3");

        table_5_indicator.setText("Table 5");

        table_2_indicator.setText("Table 2");

        expected_playTime.setBackground(java.awt.Color.red);
        expected_playTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        expected_playTime.setForeground(java.awt.Color.red);
        expected_playTime.setText("0");

        table_4_indicator.setText("Table 4");

        table_6_indicator.setText("Table 6");

        table_7_indicator.setText("Table 7");

        table_8_indicator.setText("Table 8");

        average_ok.setBackground(java.awt.Color.green);
        average_ok.setForeground(java.awt.Color.green);
        average_ok.setText("0");

        jLabel2.setText("Average missing");

        jLabel3.setText("Expected round end");

        expected_playTimeMin.setBackground(java.awt.Color.red);
        expected_playTimeMin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        expected_playTimeMin.setForeground(java.awt.Color.red);
        expected_playTimeMin.setText("0");

        jLabel4.setText("Minutes");

        jLabel5.setText("Seconds");

        setRoundNum1.setText("Set table_null");
        setRoundNum1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setRoundNum1ActionPerformed(evt);
            }
        });

        setRoundMax.setText("Set round_numMax");
        setRoundMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setRoundMaxActionPerformed(evt);
            }
        });

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MakeableFileData)
                            .addComponent(DatabaseFileData)
                            .addComponent(dealFileData))
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(table_2_indicator, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addComponent(table_3_indicator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(table_1_indicator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(table_8_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(table_7_indicator, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(table_6_indicator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(average_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(HighBoardData, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(137, 137, 137))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(timerLabel)
                                    .addComponent(jButton1)
                                    .addComponent(EXS, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton4)
                                    .addComponent(addEXS)
                                    .addComponent(Excuses)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(table_4_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(271, 271, 271)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                        .addComponent(expected_playTime, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(expected_playTimeMin, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(table_5_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(444, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(setRoundTables_button)
                            .addComponent(setTableBoards_button)
                            .addComponent(setRoundNum)
                            .addComponent(setRoundNum1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(boardsPerTable)
                            .addComponent(tables)
                            .addComponent(round_num, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .addComponent(table_null, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(StartRound)
                                .addGap(178, 178, 178))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(setRoundMax)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(round_numMax, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                                .addGap(334, 334, 334))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(dealFileData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MakeableFileData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DatabaseFileData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HighBoardData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(timerLabel)
                        .addGap(7, 7, 7)
                        .addComponent(jButton1)
                        .addGap(29, 29, 29)
                        .addComponent(EXS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Excuses)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addEXS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setRoundTables_button)
                    .addComponent(tables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setTableBoards_button)
                    .addComponent(boardsPerTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartRound))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setRoundNum)
                    .addComponent(round_num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setRoundMax)
                    .addComponent(round_numMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setRoundNum1)
                            .addComponent(table_null, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(table_1_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(table_6_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(average_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(table_7_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(table_2_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(table_8_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(table_3_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(expected_playTimeMin, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(table_4_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(expected_playTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(table_5_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
String result = "";
        DatabaseConnector dc = new DatabaseConnector();
         HashMap<Integer,ArrayList<BoardData>> bdata;
        try {
            bdata = dc.readDatabase(databasefile, 28, 100);
        tw.startappendToTimeWatcher();
       for(int i = 1; i <= highBoard; i++) { 
        if(bdata.get(i) == null) continue;
        BoardData[] bdx = new BoardData[bdata.get(i).size()];
        bdx = bdata.get(i).toArray(bdx);

 BRC brc = new BRC(dealFile,playableFile, ISOK_ID);
brc.ERR.clear();
brc.precheck(ISOK_ID);
   brc.lineError(bdx,0);
   brc.contractError(bdx,0);
   brc.contractSizeError(bdx,0);
   brc.contractResultError(bdx,0);
   brc.playableError(bdx,0);
   brc.leadError(bdx,0);
   brc.trumphError(bdx,0); 

    result+=""+brc.lineError(bdx,1);
    result+=""+brc.contractError(bdx,1);
    result+=""+brc.contractSizeError(bdx,1);
    result+=""+brc.contractResultError(bdx,1);
    result+=""+brc.playableError(bdx,1);
    result+=""+brc.leadError(bdx,1);
    result+=""+brc.trumphError(bdx,1); 
    result+="=============================\n";
    result = result.replace("=============================\n=============================\n", "=============================\n");
   // result+="\n"+brc.contractPointError(bdx); // TODO
  //  result+="\n"+brc.scoreError(bdx); // TODO

  tw.appendToTimeWatcher(bdx);
  
  
       }
     } catch (SQLException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
   tw.checkTimeWatcher();
   ArrayList<JLabel> polia = new ArrayList<JLabel>();
   polia.add(table_1_indicator);
   polia.add(table_2_indicator);
   polia.add(table_3_indicator);
   polia.add(table_4_indicator);
   polia.add(table_5_indicator);
   polia.add(table_6_indicator);
   polia.add(table_7_indicator);
   polia.add(table_8_indicator);  
   
   for(int i = 0; i < 8; i++) {
   if(i<tw.getTables()) {
   polia.get(i).setText("Table "+(i+1)+" OK");
   polia.get(i).setForeground(Color.green);
   } else {
   polia.get(i).setText("-");
   polia.get(i).setForeground(Color.black);
   }
   }
   
   
   int max = 0;
   
   for(int i = 0; i < tw.getTables(); i++) {
   if(tw.getMissingForTable(i) > tw.getAverage()) {
   polia.get(0).setText("Table "+(i+1)+" Missing "+String.valueOf(tw.getMissingForTable(i))+"");
   polia.get(0).setForeground(Color.red);
   
   
       polia.remove(0);
       
   }
   if(tw.getMissingForTable(i) > max) max =tw.getMissingForTable(i);
   }
   average_ok.setText(String.valueOf(tw.getAverage()));
   if(last_max != max)
   expected_playTime.setText(String.valueOf(max*6*60));
   
   last_max=max;
        jTextArea1.setText(result);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addEXSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEXSActionPerformed
        ISOK_ID.add(Integer.parseInt(EXS.getText())); // WORKS.
        EXS.setText("");
    }//GEN-LAST:event_addEXSActionPerformed

    private void HighBoardDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HighBoardDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HighBoardDataActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     dealFile = dealFileData.getText();
     playableFile = MakeableFileData.getText();
     databasefile = DatabaseFileData.getText();
     highBoard = Integer.parseInt(HighBoardData.getText());       
        startCheckAllTimer(evt);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         ISOK_ID.remove(Integer.parseInt(EXS.getText())); // WORKS
         EXS.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void ExcusesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcusesActionPerformed
     String result = "";
        for(int i : ISOK_ID) {
        result+=String.valueOf(i)+" ";
        }
        jTextArea1.setText(result);
    }//GEN-LAST:event_ExcusesActionPerformed

    private void setRoundTables_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setRoundTables_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_setRoundTables_buttonActionPerformed

    private void StartRoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartRoundActionPerformed
     // start time = 0!!!!
        tw.createTimeWatcher(Integer.parseInt(tables.getText()),Integer.parseInt(boardsPerTable.getText()),Integer.parseInt(round_num.getText()),0,Integer.parseInt(table_null.getText()));
    }//GEN-LAST:event_StartRoundActionPerformed

    private void setRoundNum1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setRoundNum1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_setRoundNum1ActionPerformed

    private void setRoundMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setRoundMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_setRoundMaxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    
     private void startCheckAllTimer(java.awt.event.ActionEvent evt) {                                         
        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                int seconds = 10;
                while(true) {
                if(seconds-1 != 0) {seconds--; timerLabel.setText(String.valueOf(seconds));
                    try {
                            Thread.sleep(1000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                        }
}
                else {seconds=10; jButton1ActionPerformed(null);}
                
                
                int secondsTillRoundEnd = Integer.parseInt(expected_playTime.getText());
                if(secondsTillRoundEnd!=0)
                expected_playTime.setText(String.valueOf(secondsTillRoundEnd-1));
                
                double MinutesTillRoundEnd = Integer.parseInt(expected_playTime.getText());
                if(secondsTillRoundEnd!=0)
                expected_playTimeMin.setText(String.valueOf(MinutesTillRoundEnd/60));
                }
            }
        });
        t.start();
    }                                        


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DatabaseFileData;
    private javax.swing.JTextField EXS;
    private javax.swing.JButton Excuses;
    private javax.swing.JTextField HighBoardData;
    private javax.swing.JTextField MakeableFileData;
    private javax.swing.JButton StartRound;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton addEXS;
    private javax.swing.JLabel average_ok;
    private javax.swing.JTextField boardsPerTable;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JTextField dealFileData;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JLabel expected_playTime;
    private javax.swing.JLabel expected_playTimeMin;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JTextField round_num;
    private javax.swing.JTextField round_numMax;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JButton setRoundMax;
    private javax.swing.JButton setRoundNum;
    private javax.swing.JButton setRoundNum1;
    private javax.swing.JButton setRoundTables_button;
    private javax.swing.JButton setTableBoards_button;
    private javax.swing.JLabel table_1_indicator;
    private javax.swing.JLabel table_2_indicator;
    private javax.swing.JLabel table_3_indicator;
    private javax.swing.JLabel table_4_indicator;
    private javax.swing.JLabel table_5_indicator;
    private javax.swing.JLabel table_6_indicator;
    private javax.swing.JLabel table_7_indicator;
    private javax.swing.JLabel table_8_indicator;
    private javax.swing.JTextField table_null;
    private javax.swing.JTextField tables;
    private javax.swing.JLabel timerLabel;
    // End of variables declaration//GEN-END:variables

}
